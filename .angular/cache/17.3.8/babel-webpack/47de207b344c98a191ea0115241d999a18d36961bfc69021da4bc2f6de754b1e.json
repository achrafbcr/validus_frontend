{"ast":null,"code":"import { signal } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    // store base64 creds in sessionStorage for demo only\n    this.key = 'validus_basic';\n    this.basic = signal(sessionStorage.getItem(this.key));\n  }\n  setCredentials(username, password) {\n    const token = btoa(username + ':' + password);\n    sessionStorage.setItem(this.key, token);\n    this.basic.set(token);\n  }\n  clear() {\n    sessionStorage.removeItem(this.key);\n    this.basic.set(null);\n  }\n  header() {\n    const b = this.basic();\n    return b ? {\n      Authorization: 'Basic ' + b\n    } : {};\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signal","AuthService","constructor","key","basic","sessionStorage","getItem","setCredentials","username","password","token","btoa","setItem","set","clear","removeItem","header","b","Authorization","factory","ɵfac","providedIn"],"sources":["D:\\validus-frontend\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  // store base64 creds in sessionStorage for demo only\n  private key = 'validus_basic';\n  basic = signal<string | null>(sessionStorage.getItem(this.key));\n\n  setCredentials(username: string, password: string) {\n    const token = btoa(username + ':' + password);\n    sessionStorage.setItem(this.key, token);\n    this.basic.set(token);\n  }\n\n  clear(){\n    sessionStorage.removeItem(this.key);\n    this.basic.set(null);\n  }\n\n  header(): { Authorization: string } | {} {\n    const b = this.basic();\n    return b ? { Authorization: 'Basic ' + b } : {};\n  }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;;AAGlD,OAAM,MAAOC,WAAW;EADxBC,YAAA;IAEE;IACQ,KAAAC,GAAG,GAAG,eAAe;IAC7B,KAAAC,KAAK,GAAGJ,MAAM,CAAgBK,cAAc,CAACC,OAAO,CAAC,IAAI,CAACH,GAAG,CAAC,CAAC;;EAE/DI,cAAcA,CAACC,QAAgB,EAAEC,QAAgB;IAC/C,MAAMC,KAAK,GAAGC,IAAI,CAACH,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC;IAC7CJ,cAAc,CAACO,OAAO,CAAC,IAAI,CAACT,GAAG,EAAEO,KAAK,CAAC;IACvC,IAAI,CAACN,KAAK,CAACS,GAAG,CAACH,KAAK,CAAC;EACvB;EAEAI,KAAKA,CAAA;IACHT,cAAc,CAACU,UAAU,CAAC,IAAI,CAACZ,GAAG,CAAC;IACnC,IAAI,CAACC,KAAK,CAACS,GAAG,CAAC,IAAI,CAAC;EACtB;EAEAG,MAAMA,CAAA;IACJ,MAAMC,CAAC,GAAG,IAAI,CAACb,KAAK,EAAE;IACtB,OAAOa,CAAC,GAAG;MAAEC,aAAa,EAAE,QAAQ,GAAGD;IAAC,CAAE,GAAG,EAAE;EACjD;;;uBAnBWhB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}