{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport * as i0 from \"@angular/core\";\nexport class InvoiceService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.auth = inject(AuthService);\n    this.base = '/api/invoices';\n  }\n  headers() {\n    const h = this.auth.header();\n    return new HttpHeaders(h);\n  }\n  list(status, page = 0, size = 10) {\n    let params = new HttpParams().set('page', page).set('size', size);\n    if (status) params = params.set('status', status);\n    return this.http.get(this.base, {\n      params,\n      headers: this.headers()\n    });\n  }\n  create(payload) {\n    return this.http.post(this.base, payload, {\n      headers: this.headers()\n    });\n  }\n  changeStatus(id, next) {\n    return this.http.patch(`${this.base}/${id}/status`, null, {\n      params: new HttpParams().set('next', next),\n      headers: this.headers()\n    });\n  }\n  remove(id) {\n    return this.http.delete(`${this.base}/${id}`, {\n      headers: this.headers()\n    });\n  }\n  static {\n    this.ɵfac = function InvoiceService_Factory(t) {\n      return new (t || InvoiceService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: InvoiceService,\n      factory: InvoiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["inject","HttpClient","HttpParams","HttpHeaders","AuthService","InvoiceService","constructor","http","auth","base","headers","h","header","list","status","page","size","params","set","get","create","payload","post","changeStatus","id","next","patch","remove","delete","factory","ɵfac","providedIn"],"sources":["D:\\validus-frontend\\src\\app\\invoices\\invoice.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Invoice, InvoiceStatus, Page } from './invoice.model';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class InvoiceService {\n  private http = inject(HttpClient);\n  private auth = inject(AuthService);\n  private base = '/api/invoices';\n\n  private headers(): HttpHeaders {\n    const h = this.auth.header() as any;\n    return new HttpHeaders(h);\n  }\n\n  list(status?: InvoiceStatus, page = 0, size = 10): Observable<Page<Invoice>> {\n    let params = new HttpParams().set('page', page).set('size', size);\n    if (status) params = params.set('status', status);\n    return this.http.get<Page<Invoice>>(this.base, { params, headers: this.headers() });\n  }\n\n  create(payload: Partial<Invoice>): Observable<Invoice> {\n    return this.http.post<Invoice>(this.base, payload, { headers: this.headers() });\n  }\n\n  changeStatus(id: number, next: InvoiceStatus): Observable<Invoice> {\n    return this.http.patch<Invoice>(`${this.base}/${id}/status`, null, {\n      params: new HttpParams().set('next', next),\n      headers: this.headers()\n    });\n  }\n\n  remove(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.base}/${id}`, { headers: this.headers() });\n  }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,EAAEC,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAG1E,SAASC,WAAW,QAAQ,sBAAsB;;AAGlD,OAAM,MAAOC,cAAc;EAD3BC,YAAA;IAEU,KAAAC,IAAI,GAAGP,MAAM,CAACC,UAAU,CAAC;IACzB,KAAAO,IAAI,GAAGR,MAAM,CAACI,WAAW,CAAC;IAC1B,KAAAK,IAAI,GAAG,eAAe;;EAEtBC,OAAOA,CAAA;IACb,MAAMC,CAAC,GAAG,IAAI,CAACH,IAAI,CAACI,MAAM,EAAS;IACnC,OAAO,IAAIT,WAAW,CAACQ,CAAC,CAAC;EAC3B;EAEAE,IAAIA,CAACC,MAAsB,EAAEC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE;IAC9C,IAAIC,MAAM,GAAG,IAAIf,UAAU,EAAE,CAACgB,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC,CAACG,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IACjE,IAAIF,MAAM,EAAEG,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjD,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAAgB,IAAI,CAACV,IAAI,EAAE;MAAEQ,MAAM;MAAEP,OAAO,EAAE,IAAI,CAACA,OAAO;IAAE,CAAE,CAAC;EACrF;EAEAU,MAAMA,CAACC,OAAyB;IAC9B,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAU,IAAI,CAACb,IAAI,EAAEY,OAAO,EAAE;MAAEX,OAAO,EAAE,IAAI,CAACA,OAAO;IAAE,CAAE,CAAC;EACjF;EAEAa,YAAYA,CAACC,EAAU,EAAEC,IAAmB;IAC1C,OAAO,IAAI,CAAClB,IAAI,CAACmB,KAAK,CAAU,GAAG,IAAI,CAACjB,IAAI,IAAIe,EAAE,SAAS,EAAE,IAAI,EAAE;MACjEP,MAAM,EAAE,IAAIf,UAAU,EAAE,CAACgB,GAAG,CAAC,MAAM,EAAEO,IAAI,CAAC;MAC1Cf,OAAO,EAAE,IAAI,CAACA,OAAO;KACtB,CAAC;EACJ;EAEAiB,MAAMA,CAACH,EAAU;IACf,OAAO,IAAI,CAACjB,IAAI,CAACqB,MAAM,CAAO,GAAG,IAAI,CAACnB,IAAI,IAAIe,EAAE,EAAE,EAAE;MAAEd,OAAO,EAAE,IAAI,CAACA,OAAO;IAAE,CAAE,CAAC;EAClF;;;uBA7BWL,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;MAAAC,UAAA,EADD;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}